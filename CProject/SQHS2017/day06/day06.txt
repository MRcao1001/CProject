				day06 Note
IP：192.168.155.7
复习：
1. if ~ else
	if(expression1)
	{}
	else if(expression2)
	{}
	else
	{}

2. switch ~ case
	switch(option)
	{
		case value:
		{
			break;
		}
		default:
		{}
	}

3. 实型数据和 0 比较
	1 + '1' = ?

=================================================
1. C 三大结构 
	顺序结构
	分支结构
		if ~ else
		switch ~ case
	循环结构
		while()
		do{}while();
		for(;;)

2. while 循环
（1）一般使用形式
	 while(表达式)
	 {
	 	//循环体---代码块
	 }
	
	 表达式的结果为真，则执行 {} 里的内容
	 若不成立，则不执行

（2）执行过程
	 a. 判断表达式是否成立，
	    成立执行 b ，不成立执行 c
	 b. 执行 {} 中的内容（即循环体），执行 a
	 c. 结束循环

（3）循环的结束条件 
	 在循环体中要有趋于循环结束的条件！
	 
（4）死循环的写法
	 while(1)
	 {}

（5）练习
	a. 求 1～100 之间所有数的和？
	b. 求 100 以内所有奇数的和？
	c. 求 100 以内所有偶数的和？
		（1）iNum += 2
		（2）对 2 求余
		（3）采用位运算：iNum & 1
			 a. if((iNum & 1) == 0)	//偶数
			    if((iNum & 1) == 1)	//奇数
			 b. switch(iNum & 1)
			 	{
			 		case 0:
			 			//偶数和
			 			break;
			 		case 1:
			 			//奇数和
			 			break;
			 	}

（6）如果循环体只有一条语句，{} 可以省略不写
     如果循环体有多条语句，则{}不能省略
     
     {} 中定义的变量，只能在 {} 中使用

（7）先判断，后执行！

（8）练习
	 a. 任意输入一个数，求该数的阶乘？
	 	0! = 1;
	 	1! = 1;
	 	2! = 2×1;
	 	3! = 3×2×1;
	 
	 b. 求所有的水仙花数（3位的自幂数）？	
	 自幂数：
	 	对于一个 n(n>=3) 位数
	 	它的每个位上的数字的 n 次幂之和等于它自身
	 	我们称之为自幂数
	 	
	 	int abc = a^3 + b^3 + c^3
	 	
	 c. 输入一个数，判断该数是否是素数？
	 		输入：iNum
	 		2 ~ iNum-1
	
（9）break &  continue
	 break:
	 	用于跳出循环，且只能跳出 break 所在的循环
		即 break 只能跳出一层循环
		
	 continue：
	 	略过本次循环，进入下一次循环

	 练习：
	 	计算 100 以内，除含 3 的以外所有数的和？
	 	
（10）多重循环的使用
	  循环一般不超过 3 层循环

	  两重循环练习：
		  a. 打印直角三角形？
	
		  b. 打印九九乘法表？	  
	
		  c. 打印等要三角形，行数由键盘输入。
     *
    ***
   *****
  *******
 *********
***********

行数   空格   *个数
 1      5      1
 2      4      3
 3      3      5
 4      2      7
 5      1      9
 6      0      11
iNum iNum-row  2*iNum-1


2. do{}while();
（1）一般形式
	do
	{
		//循环体
	}while(表达式);

	先执行，后判断！
	循环体至少执行一次！！！
	
（2）嵌套使用
	do
	{
		//...
		do
		{
			//循环体
		}while(表达式1);
		//...
	}while(表达式2);

Windows: Raptor

3. for 循环
（1）一般使用格式
	 for(表达式1; 表达式2; 表达式3)
	 {
	 	//循环体
	 }
	 
	 表达式1:循环条件的初始化
	 表达式2:循环结束或循环开始条件
	 表达式3:循环步长或者循环变量的更新
	
（2）执行过程
	 a. 执行表达式1
	 b. 判断表达式2是否成立，
	 	成立，则执行 c
	 	不成立，执行 e
	 c. 执行循环体，执行 d
	 d. 执行表达式3,即更新循环变量，执行 b
	 e. 结束

4. 循环的比较
	do{}while();
		用于代码至少执行一遍或只执行一次的情况
	while（）
		用于循环次数不固定的情况
		一般用于数据结构的递归
	for()
		用于循环次数确定的情况


5. 开方函数：
	sqrt(iNum) --- math.h
	
	gcc file.c -o file -lm
	




































