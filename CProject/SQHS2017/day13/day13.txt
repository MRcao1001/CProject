			day13 Note

IP: 192.168.1.101

复习：
1. 函数的引入
	函数的基本定义
	函数的分类
		有参和无参函数
		有返回值和无返回值函数

2. 参数问题
	形式参数（形参）
	实际参数（实参）

作业：
	strcpy()
	strcmp()
	strcat()

=======================================================
1. 函数参数问题	
	实参和形参在数量，顺序，类型上要严格一一对应

	若不一致，则会存在隐式转化，数据精度会出问题
	因此可能得到错误的结果

2. 返回值问题
（1）取决于函数的类型说明符
	 类型说明符 函数名称(参数列表)
	 {
	 	//函数体
	 	//返回值（可有可无）
	 }

	 类型说明符一般称之为函数的返回类型

（2）函数返回值一般有以下两种写法
	 	return 表达式;
	 或者
	 	return (表达式);

（3）return 的作用
	 a. 返回函数的执行结果
	 b. 结束当前函数的运行
	    
	 在函数执行过程中，碰到 return 语句，则函数
	 立即结束，之后的代码不再执行
	 
	 return 语句在函数中可以有多个，但是只有一个
	 return 语句被执行

	练习：
		自定义函数实现：
			求两个数中的最值

（4）函数定义 & 函数声明 & 函数调用
     函数定义：
     	类型说明符 函数名称(形参列表)		//函数头
     	{
     		//函数体
     		//返回值
     	}

	 函数声明：
	 	类型说明符 函数名称(形参列表);
	 	函数头后加一个分号即为相应函数的函数声明
	 	
	 	位置：
	 		放在函数调用之前任意位置均可
	 		
	 	写法：以下写法均是对的
	 		类型说明符 函数名称(形参列表);
	 		类型说明符 函数名称(类型1, 类型2, 类型3);

		形式参数在发生函数调用时，才会分配内存空间

	 函数调用：
	 	函数名称(实参列表);

3.  关于函数定义
	//错误，在 C 中，不允许函数之间嵌套定义
	//函数之间是平行关系
	类型说明符 函数名(参数列表)
	{
		类说明符 函数名称(参数列表)
		{
			//...
		}
		//...
	}

4. 函数的递归
（1）直接递归：函数调用自己
     间接递归：函数通过其他方式调用自己

（2）递归一定要有结束条件，否则会无限运行
     导致内存耗完，程序崩溃

（3）练习
		递归法求阶乘/累加和
	 
	 递归法求非波那契数列

	1  2  3  4  5  6  7   8   9   10  11
	1  1  2  3  5  8  13  21  34  55  89 

5. 指针函数 & 函数指针
	指针函数
		类型说明符 *函数名称(参数列表)
		{
			//函数体
		}
	
	函数指针
		类型说明符 (*函数指针变量名称)(参数列表);

6. 变量的作用域和生命周期
（1）全局变量 & 局部变量
	 全局变量：
	 	在函数体之外定义的变量
	 	
	 局部变量：
	 	在代码块中定义的变量
	 	（函数体，循环体，if的{}， case的{}等等）
	 	
			 作用域               生命周期
	全局变量  从定义处开始，      程序结束前
	          到该文件文件结束
	局部变量 仅限于定义它的代码段  函数结束之前
	         中使用

	全局对局部变量不可见！

（2）声明：extern 
		全局变量声明时，不可再次初始化
		
		声明函数 和 变量
		
作业：
	1. 自定义函数实现：
		gets()
	
	//函数原型仅供参考
	void myGets(char *dest, int length)
	char *mygets(char *dest, int length);		
	
	while(getchar() != '\n');
		
	2. 递归法实现：strlen();
		
		
		
		
		
		
		
		
		
		
		
		
		







