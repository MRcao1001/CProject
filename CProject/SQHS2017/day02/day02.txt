		day02 Note
复习：
1. C 的介绍
	C 的学习方法
		指法 & 速度
	
	程序 = 算法 + 数据结构
	
	面向过程 
	
2. 基本数据类型
	hello,world!
	
	main 函数的写法
		int main()
		int main(int argc, char **argv)

	整型：int
		短整型(short int)
		整型(int)
		长整型(long int)

		有符号(signed)
		无符号(unsigned)

	字符型：char
		'a' '#'
		
	常量 & 变量

	printf 简单的使用

	数据类型的字节数：
		char   1 Byte
		short  2 Byte
		int    4 Byte
		long   4 Byte
		float  4 Byte
		double 8 Byte
==================================================
1. char 类型的输入和输出
	putchar();	//输出单个字符
	getchar();	//输入单个字符

	putchar('H');
	char ch = getchar();
	
	printf("input: %c\n",getchar());
	
	putchar(getchar());

2. C 语言的注释
（1）行注释： //
	 //注释内容
	 
（2）块注释：/* */
	 /* 注释内容 */

（3）解释说明代码的作用，
	 在编译时，并不编译注释部分

3. 标识符
（1）变量名，函数名，其他标号称之为标识符
	 除库函数以外，其他的标识符，由用户自定义

（2）标识符只能由字母（大小写），数字和下划线组成
	 但不能以数字开头！	
	 	iNum  iNum1 iNum_1  	//OK
	 	2num	//error

（3）字母的大小写是有区别的
	 iNum  inum 是两个标识符

（4）C 对于标识符的长度没有限制，但是对于编译系统
	 和不同的机器对标识符的长度有限制！

4. 关于变量命名问题
（1）变量名也是标识符

（2）采用驼峰命名法
	 int addStuInfo;
	 
（3）不允许采用以下几种形式
	 int a,b,c,d,e,f;		//不建议
	 int a1,a2,a3,a4,a5;	//不建议
	 
（4）采用英文单词，不可用汉语拼音代替
	 有道，百度翻译，

（5）其他命名方式
	 int iNum;
	 char cNum;
	 long int lNum;
	 float fNum;

5. 实型数据
（1）浮点型数据：float
	 float fNum = 3.14;
	 占位符： %f  ---> 默认保留小数点后六位
	 精确度： 5 位左右
	
（2）双精度：double
	 doule dNum = 3.14;
	 占位符：%lf 
	 精确度：15 位左右

（3）实型数据的表示形式
	3.124455 
	4.235
	 
	 科学计数法：
	 	m * 10^n
	 	m: 可以是实型数据，可以是整数
		n: 必须是整数！！！
	mEn 或 men
		m: 可以是实型数据，可以是整数
		n: 必须是整数！！！
	
		mEn = m * 10^n;
		
（4）实型数据的其他占位符
	 %g ---> 自动舍去小数点后无用的 0
	 %e ---> 科学计数法输出

6. printf() & scanf()
（1）格式化输出：printf() ---> 按一定的格式输出
	a. 输出字符串：
		printf("hello, world!\n");
		""中间的内容为输出内容

	b. 按格式输出
		printf("格式化列表",表达式);
		
		printf("%d--%f--%lf\n",iNum, fNum, dNum);
		printf("iNumm = %d\n",iNum);

		除了占位符以外，其他的全部原样输出
		
	c. 对于实型数据的输出
		占位符：%f %g %e %lf
	   指定输出宽度：
	   	%.nf:指定小数点后保留 n 位
	   	%m.nf: 右对齐
	   		m：指定保留总的位数（整数部分+小数部分）
			n：指定小数部分的位数
			
			m < n+1+整数部分位数：
				此时 m 无效，以实际宽度输出
			m > n+1+整数部分位数：
				此时输出的总位数为 m 不足的
				左侧补空格

		%-m.nf: 左对齐

（2）格式化输入：scanf()  ---> 按一定的格式输入
	 a. 输入数据
	 	int a = 0;
	 	scanf("%d",&a);
			&:取地址运算
			&a:表示 a 的地址
			将数据存到地址中
			注意：
				此处不能使用 \n
	b. \n 会造成缓冲区问题，缓冲区填满数据后才会输出

	c. 多数据的输入
		scanf("%d%d%d",&a,&b,&c);
		可以用回车，空格，Tab来隔开三个数据
		
		scanf("%d,%d,%d",&a,&b,&c);
		终端输入数据时，数据之间必须用 , 隔开
		
		"" 中给定什么格式，则严格按格式输入数据！！！
		
		scanf("%c%c%c",&ca,&cb,&cd);
		对于字符型变量的输入，不可使用空格，Tab键
		或回车代替
	
	d. 输入宽度
		 scanf("%4d%2d%d",&a,&b,&c);
		 截取输入的第一个数据的前 4 位赋给 a
		 下2位给 b,剩余部分给 c
		 
	e. 输入精度
		不能确定输入精度
		scanf("%4.2f",&fNum);	//error

7. printf & scanf
	占位符问题：
			char short int long float double  字符串
	printf	  %c   %d   %d  %ld   %f   %lf/%f   %s
	scanf	  %c   %d   %d  %ld   %f   %lf      %s

	%u: unsigned
	%o:八进制形式输出
	%x:十六进制形式输出
	%X:
	%p:输出地址
	%e:科学计数法输出实型数据
	%g:忽略不必要的 0
	%s:字符串

8. 其他数据类型
（1）复合数据类型
		 结构体
		 联合体
		 枚举类型
		 数组

（2）指针类型
	 类型说明符 *

（3）空类型：void
	 a. 用于函数，函数无返回值
	 b. 用于指针，空类型指针

9. 类型转化
（1）隐式转化
	 int a = 3.12;
	 编译器会自动将 = 右侧的数据转化为
	 左侧数据对应的数据 类型
（2）显式转化（强制类型转化）
	 int b = (int)3.46;
	 char ch = (char)12;

（3）原则：低精度---> 高精度转化
	 char/short--> int --> long --> float -->double
	
	 char ch = '0';
	 ch = 289;
	 printf("%c--%d\n",ch, ch);
	 
	 //截取低八位进行赋值
	 0000 0001 0010 0001 (289)
			   0000 0000 (ch)
		ch = 33;

10. 关机命令
	sudo shutdown -h now	//立即关机
	sudo shutdown -h 时间点	//在指定时间点关机
	sudo shutdown -c		//取消关机	

	重启：
		sudo shutdown -r now
		reboot
































