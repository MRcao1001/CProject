				day14  Note

IP: 192.168.1.101

复习：
1. 函数传参 & 函数返回值 
	实参 ---> 形参 （赋值过程）
	
	函数返回值取决于函数名前的类型
		return (expression);
		return expression;
		
	函数返回值的使用
	
	函数调用的三种形式：
		a. 简单的调用函数完成相应的功能
			   showHello();
		
		b. 返回值对后续代码有用，则需要在主调函数
		   中用同类型变量接收函数的返回值
		      int ret = getMax(a, b);
		
		c. 作为参数
			  printf("max = %d\n", getMax(a,b));

2. 函数定义 & 函数声明 & 函数调用
	函数定义
		类型说明符 函数名称(形参列表)
		{
			//函数体
		}

	函数声明
		类型说明符 函数名称(形参列表);
		类型说明符 函数名称(类型， 类型， 类型...);
	
	函数调用
		函数名称(实参列表);

3. 指针函数 & 函数指针
	指针函数：
		类型说明符 *函数名称(形参列表)
		{
			//函数体
		}

	函数指针
		类型说明符 (*函数指针变量名称)(形参列表);
		
		函数名称代表函数入口地址
		
		类型说明符 (*pFunc)(形参列表);
		使用形式
			pFunc(实参列表);
			(*pFunc)(实参列表);

		函数指针作为函数参数：
			函数指针的形式一定要和所指向的函数
			保持一致

4. 全局变量 & 局部变量
	生命周期
	作用域

	全局变量对局部变量不可见！（变量名一样时）

5. 声明：extern 
	声明变量
		extern int a; 	//声明变量的时候不可赋值
	声明函数
	 	类型说明符 函数名称(形参列表);
	 	extern 类型说明符 函数名称(形参列表);

作业：
	1. 递归法实现 strlen()
	2. 自定义函数实现 gets();
		void gets(char *dest, int size);
		char *gets(char *dest, int size);

================================================
0. 关于函数嵌套定义
	C 语言里函数嵌套定义是错误的。
	
	取决于编译器：
		gcc 的扩展语法

1. main 函数的参数问题
	int main(int argc, char *argv[]);
	int main(int argc, char **argv);
	
	argc:保存传入 main 函数参数的个数
	agrv:保存各个参数的名称

2. 变量的存储类型
	自动变量：auto
		auto 关键字一般省略不写
		该类型变量由系统分配和释放
		存储在栈区
		
		函数结束或代码段结束，则自动变量消亡
		
		全局变量不可用 auto 修饰
		
	静态存储类型：static
		a. 修饰变量
			static 类型的变量，若未初始化
			则系统默认初始化为 0;
			
			存储在静态数据区，static 类型变量
			其生命周期为整个程序运行期间
			
			static 类型变量只初始化一次
			
			全局变量
			局部变量
		
			static 修饰的变量只能在当前文件中使用
		
		b. 修饰函数
			static 修饰函数时，被修饰的函数
			只能在当前文件中使用，不可在其他
			文件中使用

3. 关键字：const 
	const 修饰的变量为只读变量
	const int a = 9;
	a += 8;	//error
	
	const int *pa = &a;
	int const *paa = &a;
	
	int * const pb = &a;
	
	const int * const pc = &a;

4. register & volatile
	register : 寄存器变量
		用 register 修饰的变量，保存在寄存器中
		一般变量不用该关键字修饰
	
	volatile : 防止编译器优化

5. 再看函数返回值
	不能返回一个局部地址

6. 复合数据类型 --- 结构体
（1）介绍
	 不同数据类型的集合
	 
（2）一般说明形式
	 关键字：struct 用来标识结构数据类型

	 struct 结构名称
	 {
	 	//成员列表
	 };

	结构名称：驼峰命名法
	成员列表：可以是基本数据类型，
	         也可以时复合数据类型
	; 一定不能省略！

（3）结构的应用
	 struct point
	 {
	 	float x;
	 	float y;
	 }a;

	 //struct point 

（4）成员访问
	 . 代表 的 意思
	 
	 a.x
	 a.y
	
作业：
int arr[20] = {1,1,1,1,1,0,0,1,0,0,0,1,1,1}
数组中全部都是由 0 和 1 组成，试写程序计算
数组中 0 和 1 的个数：
要求：
	不得使用任何形式的判断语句
	包括但不限于if，swith，三目运算符
	或以循环代替判断的方式

自定义函数实现：myStrncpy()









































































				
