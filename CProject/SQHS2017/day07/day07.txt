				day07 Note
IP:

复习：
1. while()
	先判断，后执行
	
2. do{}while();
	先执行，后判断
	
3. for(;;)
	for(expression1; expression2; expression3)
	{
		//循环体
	}

	表达式1,2,3 可以任意省略其中的一个或两个或三个
	但是两个 ; 一定不能省略！

4. 区别

5. 死循环的写法
	while(1)
	{}
	
	do
	{}while(1);
	
	for(;;)

作业：
1. 打印如下图形     			     
						 A
                        BBB
                       CCCCC
                      DDDDDDD
                     EEEEEEEEE
                ....................
       ......................................
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ

2. 阶梯问题:
	在你面前有一条长长的阶梯:
		若每步跨2阶，则最后剩1阶；
		若每步跨3阶，则最后剩2阶；
		若每步跨5阶，则最后剩4阶；
		若每步跨6阶，则最后剩5阶；
		只有每步7阶时，才刚好走完;
		请问这条阶梯至少有多少阶？(求所有三位阶梯数)

3. 求 2~1000 之间的素数，每15个一行
		sqrt(iNum)+1
		
4. 字母金字塔2
输入:E
    A
   ABA
  ABCBA
 ABCDCBA
ABCDEDCBA

	第一部分：空格
	第二部分：正序字母
	第三部分：逆序字母
	
	循环的初始条件可以任意：
		可以从 'A' 开始

	for(int i = 0; i<97; i++)	//不建议
	
	for(i=0; i<97; i++)

5. 百钱百鸡
	公元5世纪末，我国数学家张丘所撰《算经》提出问题：
  “鸡翁一，值钱五；鸡母一，值钱三；鸡雏三，值钱一。
   百钱买百鸡，问鸡翁、母、雏各几何？”
	
	公鸡：1 ～ 100/5  a
	母鸡：1 ～ 100/3  b
	小鸡：3 ～ 		  c
		
	方法一：
		三重循环：
		百钱百鸡同时成立
		a+b+c == 100 && 5*a + 3*b + c/3  == 100
	方法二：
		c = 100 - a - b;	//小鸡的数量
		a+b+c == 100 && c%3 == 0

6. 时钟
		08:00:00
		
		system("clear");
		sleep(1);
		
7. 猴子第一天摘下若干桃子，
	当即吃了一半，又多吃了一个;
	第二天将剩下的桃子吃掉一半，又多吃了一个;
	以后每天都吃了前一天剩下的一半多一个;
	到第六天时，发现只剩下一个桃子;
	问：第一天一共摘了多少个桃子？	

每天剩余：
			  吃		剩  总数
	第一天： A/2+1   a    A 
	第二天： a/2+1   b    B
	第三天： b/2+1   c    C
	第四天： c/2+1   d    D
	第五天： d/2+1   e    E
	第六天：         1
	
每天的桃数：
	第六天：1
	第五天：(e+1)*2 = d
	第四天：(d+1)*2 = c
	第三天：(c+1)*2 = b
 	第二天：(b+1)*2 = a
	第一天：(a+1)*2 = A
	
	int day = 5;
	int count = 1;
	
	//结果为：94
	for(day=5; day>0; day--)
	{
		count = 2*(count + 1);
	} 

=================================================
1. 数组
（1）基本介绍
	 同一个数组中的数据类型一致！
	 数组中的元素在内存中连续分布。

（2）数组的定义
	 a. int arr[5];
	 	定义一个数组，数组中含有五个元素
	 	每个元素都是 int 类型

	    double dArr[7];
	    char cArr[3];

	 b. 定义的一般形式
	 	类型说明符 数组名[LEN];
	 	类型说明符：基本数据类型，复合数据类型
	 				或其他自定义数据类型
	 	数组名：
	 		采用驼峰命名法
	 		标识了该数组！同时也代表数组首元素的地址
	 	LEN:
	 		数组的大小
	 	[]: 数组下标，标识具体数组元素
	 		下标值：
	 			0 ~ LEN-1
	
			arr[0] ~ arr[LEN-1];

	c. 不同类型的数组保存不同的数据
	   
（3）数组的初始化
	 a. 全部初始化
	 	int arr[4] = {1,2,3,4};  	
	 	int iArr[6] = {9,5,7,6,5,4};	
	 
	 b. 部分初始化  --- 其他元素默认为 0
	 	int buf[7] = {1,2,3,4};		//OK
	 	
	 	int buf1[5] = {1,1,1,1,1};	//OK
	 	
	 	int buf2[4] = {9};		//OK
	 	
	 	int buf3[6] = {0};		//OK
	 	
	 c. 初始化具体元素
	 	int buf4[6] = {[1]=3,[5]=2,[0]=33};//OK
	 	
	 d. 数组元素若未初始化，则默认为随机值
	 
（4）数组元素的访问
	a. 逐个访问
	   int arr[5] = {1,2,3,4,5};
	 
	   arr[0],arr[1],arr[2],arr[3],arr[4];
	 	 
	   printf("%d\n", arr[1]); 

	b. 循环遍历访问
		for(i=0; i<5; i++)
			printf("%d\n",arr[i]);

	c. 向数组中保存奇数/偶数
		2 * i + 1;	//奇数	
		2 * i;		//偶数
		for(i-0; i<5; i++)
			arr[i] = 2 * i + 1;

	d. 向数组中保存随机数
		#include<stdlib.h>
		#include<time.h>
		
		//void srand(unsigned int seed);
		//设置随机数种子,只设置一次
		srand(time(0));		//srand(time(NULL));
		
		//产生随机数
		//int rand(void);
		rand() % N;	//取 N 以内的随机数

（5）数组大小问题
	 a. 数组在定义时，其大小必须确定！！！
	 	int arr[];	//Error
	 	int buf[] = {1,2,3,4};	//OK
	 
	 b. 大小使用变量
	 	int a = 5;
	 	int arr[a] = {0}; 	//Error
	 	
	 	int b = 0;
	 	scanf("%d", &b);
	 	int buf[b] = {0}; 	//Error

		const int c = 5;
		int cBuf[c] = {0};	//Error
	
	c. 宏定义
		#define LEN 5
		int arr[LEN] = {0};	//OK

（6）练习
	 a. 产生一个随机数组，输出其中的最大值
	    和最小值,及所有元素的和
	    
作业：
	以下数组均为随机数组

1. 输入一个数，并判断数组中是否存在该数
   若存在则输出其下标，不存在则输出不存在
   
2. 倒置一个数组
	int a[LEN] = {1,2,3,4,5};
		  a[0] a[1] a[2] a[3] a[4]
  倒置前：  1    2    3    4    5
  倒置后：  5    4    3    2    1   

3. 该题为有序数组（定义时，直接初始化） 
	输入一个数，并判断数组中是否存在该数;
   若存在，则删除该数，并输出数组;
   若不存在，则插入数组中，插入后数组仍为有序。

4. 将 2~1000 之间的所有素数保存到数组中
   遍历素数数组输出，每 10 个一行

























