			day22 Note

IP: 192.168.1.103

（1）构思 & 设计
	 由上到下
	 	界面层 ---> 数据层
	 
	 由下到上
		数据层 ---> 界面层
		
	 整体分析：
	 	文件拆分：大概需要的文件
	 	结构设计：基本信息
	 	基本流程：功能模拟

（2）一般设计思路
	 界面层：
	 	界面绘制 --- printf() 绘制简单界面
	 	数据采集 --- 从标准输入获得相关数据
	 	
	 业务逻辑层：
		函数之间的调用
		上层函数调用底层函数
		逻辑处理 --- 符合正常的逻辑
		
	 数据链路层：
		数据处理 --- 链表的增删改查
		数据存储 --- 读写文件
			读文件 --- 创建链表的过程
					   由文件到链表
			写文件 --- 由链表到文件的一个过程
		
		
	界面层  --->  业务逻辑层 --->  数据链路层	
		
（3）ATM
 	a. 绘制界面
 		atm 端
 		柜台端
 	
 	b. 数据处理
 		链表的相关操作
 			atm：
 				查 改
 				文件读，写
 			柜台： 
				增 删 改 查 
				文件读，写

	c. 先建立基本信息

	d. 组织业务逻辑层 
		也即函数之间的调用关系

	e. 函数
		函数定义
			源文件中(.c)
			类型说明符 函数名称（参数列表）
			{
				//函数体
				//返回值：
					//有：return value;
					//无：return;(类型说明符为 void)
			}
			
			明确自定义函数的功能，即函数要实现什么
			功能，是否需要函数执行的结果，来确定形式
			参数和函数的返回类型
			
			函数定义过程中，形参的类型和名称必须
			确定，方便引用形参
			
			自定义函数时，功能实现需要通过外部
			获得的数据，一般将其确定为函数的形参			

		函数声明
			头文件中(.h)
			形式一：
				类型说明符 函数名称(参数列表);
			形式二：
				类型说明符 函数名称(类型1,类型2,类型3);
			
		函数调用
			源文件中
			
			函数名称(实参列表);

			实参和形参在数量，顺序和类型上要严格一一
			对应！

			实参 ---> 形参 就是一个赋值过程

（4）函数调用和返回
		逐层向下调用
		逐层向上返回


（5）二分查找/折半查找
	 基于有序序列

	一分为二:
		
		要查找的数(iNum)  与  中间数进行比较(mid)
		
		low <  high
		
		iNum == mid 
			mid即为所查找的数
			
		iNum < mid
			则在 0 ～ mid-1 范围内
			查找 iNum 
		
		iNum > mid
			则在 mid+1 ～ LEN-1 范围内
			查找 iNum
	

	0 1 2 3 4 5 6 7 















