		day09  Note

IP: 192.168.155.7 

复习：
1. 冒泡排序
	比较的轮数
	每轮比较的次数

2. 数组的定义和初始化
	int arr[5] = {1,2,3,4,6};
	int arr = 9;
	
	数组名和变量名不可重复！！！
	
	越界访问：不允许
		arr[5] = 999;		//Error
		printf("arr[5] = %d\n", arr[5]);	//Error

3. 数组的地址问题
	arr
	&arr[0]
	&arr
	&arr+1
	arr+1

作业：
		假设有 100 个小孩按序排好，参与游戏，
        指定从第 i 个小孩开始数数，数到
        iNum 时，该小孩淘汰，以此类推，直到
        剩余一个小孩为止。

==================================================
1. 二维数组
（1）一般定义形式
	 类型说明符 数组名[ROW][COL];
	 类型说明符：常见数据类型
	 数组名：代表二维数组
	 ROW:行下标， 0~ROW-1
	 COL:列下标， 0~COL-1

	int arr[3][3];
	
	char buf[2][4];

（2）二维数组的初始化
	a. 全部初始化
		int arrOne[3][3] = {1,2,3,4,5,6,7,8,9};
		int arrTwo[3][3] = 
						{{1,2,3},{4,5,6},{7,8,9}};
	b. 部分初始化
		int arrThr[3][3] = {0};
		int arrFOU[4][3] = {1,2,3,4,6};
		int arrFIV[3][3] = {{1,2},{4},{5,6,7}};

（3）二维数组的其他定义形式
	 
	 int buf[] = {12,34,56}; //OK
	 
	 int arr[3][3]; 	//OK
	 int arr[][];		//Error
	 int arr[][] = {1,2,3,4,5};		//Error
	 int arr[3][];		//Error
	 int arr[3][] = {1,2,3,4,5,6};
	 int arr[][3];		//OK
	 int arr[][3] = {1,2,3,4,5,6};

	 二维数组的定义，行数可以省略，但是列数必须确定
	 当行数缺省时：
	 	根据初始化的元素个数，确定行数
	 	若初始化元素个数，能被列数整除，则商为行数
	 	若不能整除，则行数为商加 1;

（4）二维数组的访问
	 int arr[3][3] = {
	 					1,2,3,
	 					4,5,6,
	 					7,8,9
	 				 };
	 a. 通过下标
		 arr[1][1] = 5;
		 arr[2][2] = 33;	 

		 arr[3][2] = ? 	//非法
		 arr[1][3] = ? 	//非法

	 b. 遍历输出二维数组元素

（5）二维数组的地址问题
	 
	 int arr[3][4] = {arr[0], arr[1], arr[2};
	 
	 arr
	 arr[0] ---> *(arr+0)
	 arr[1] ---> *(arr+1)
	 arr[2] ---> *(arr+2)
	 
	 第一行：
	 	第一个元素：arr[0]+0 ---> *(arr+0)+0
	 	第二个元素：arr[0]+1 ---> *(arr+0)+1
	 	第三个元素：arr[0]+2 ---> *(arr+0)+2
	 
	 arr[1] ---> *(arr+1)
	 第二行：
	 	第一个元素：arr[1]+0 ---> *(arr+1)+0 
	 	第二个元素：arr[1]+1 ---> *(arr+1)+1
	 	第三个元素：arr[1]+2 ---> *(arr+1)+2
	 	
	 arr[2] ---> *(arr+2)
	 第三行：
	 	第一个元素：arr[2]+0 ---> *(arr+2)+0
	 	第二个元素：arr[2]+1 ---> *(arr+2)+1
	 	第三个元素：arr[2]+2 ---> *(arr+2)+2
	
	第 i 行 第 j 列 的元素：
		*(*(arr+i) + j)
	

	&arr[0][0] = 0x7ffc4d244490
	&arr[0][1] = 0x7ffc4d244494
	&arr[0][2] = 0x7ffc4d244498

	&arr[1][0] = 0x7ffc4d24449c
	&arr[1][1] = 0x7ffc4d2444a0
	&arr[1][2] = 0x7ffc4d2444a4

	  arr[0]   = 0x7ffc4d244490
	  arr+0    = 0x7ffc4d244490
	  *(arr+0) = 0x7ffc4d244490
	
	  arr[0]+1 = 0x7ffc4d244494
	
	  arr[1]   = 0x7ffc4d24449c
	  arr[1]+1 = 0x7ffc4d2444a0
	  arr+1    = 0x7ffc4d24449c
	  *(arr+1) = 0x7ffc4d24449c

2. 指针
（1）指针的定义
	 类型说明符 * 指针名称;		//OK
	 类型说明符* 指针名称;		//OK
	 类型说明符 *指针名称;		//OK	

	 int *pa;
	 int * pb;
	 int* pc;
	 
	 double *pd;
	 char *pch;

（2）指针实际上就是一个地址！
	  int *pa;

（3）指针的初始化
	 int a = 10;
	 
	 int *pa = &a; 	//初始化
	 
	 int *pb;
	 pb = &a;	 //初始化

	&a = 0x7fff238c652c
	p  = 0x7fff238c652c
	&p = 0x7fff238c6530


（n）概念区分
	 指针的类型：
	 指针所指向的类型：

作业：
1. 二维数组打印杨辉三角
   1 
   1    1 
   1    2    1 
   1    3    3    1 
   1    4    6    4    1 
   1    5   10   10    5    1 
   1    6   15   20   15    6    1 
   1    7   21   35   35   21    7    1 

2. 实现二维数组的行列互换

3. 非波那契数列
	
	1   1   2   3   5   8  13  21  34  55








